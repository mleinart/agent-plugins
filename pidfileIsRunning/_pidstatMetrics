#!/usr/bin/env python
import sys, subprocess

## This requires sysstat package for the pidstat command
## You can add -s to the command if you have 9.1 for stack info
IGNORED_FIELDS = ['Time','PID','%guest','CPU','Command']
PIDSTAT_CMD = '/usr/bin/pidstat -p %s -druh'

if len(sys.argv) != 2:
  print "Usage: %s <pid>" % sys.argv[0]
  sys.exit(0)

devnullr = open('/dev/null', 'r')
devnullw = open('/dev/null', 'w')
cmd = PIDSTAT_CMD % sys.argv[1]
p = subprocess.Popen(cmd.split(), stdin=devnullr, stderr=devnullw, stdout=subprocess.PIPE)

lines = p.stdout.readlines()
p.wait()

metrics = []
values = []
found = False
for l in lines:
  if not found:
    if not l.startswith('#'):
      continue
    found = True
    metrics = l.split()[1:]
  else:
    values = l.split()

if len(metrics) != len(values):    
  sys.exit(0) # Ah crap!

for i in range(len(metrics)):
  if metrics[i] in IGNORED_FIELDS: continue
  try:
    int(values[i])
    type = 'int'
  except ValueError:
    type = 'float'
  print ' '.join(['metric', metrics[i], type, values[i]])


